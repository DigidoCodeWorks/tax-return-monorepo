/* eslint-disable */
import * as types from './graphql';
import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';

/**
 * Map of all GraphQL operations in the project.
 *
 * This map has several performance disadvantages:
 * 1. It is not tree-shakeable, so it will include all operations in the project.
 * 2. It is not minifiable, so the string of a GraphQL query will be multiple times inside the bundle.
 * 3. It does not support dead code elimination, so it will add unused operations.
 *
 * Therefore it is highly recommended to use the babel or swc plugin for production.
 * Learn more about it here: https://the-guild.dev/graphql/codegen/plugins/presets/preset-client#reducing-bundle-size
 */
type Documents = {
    "\n  mutation UpdateTaxReturn($input: TaxReturnUpdateInput!) {\n    updateTaxReturn(input: $input) {\n      id\n      lastStep\n      revenue {\n        wageIncomes {\n          id\n          ssn\n          name\n          salaryAmount\n        }\n        pensionPayments {\n          id\n          type\n          name\n          amount\n        }\n        vehicleAllowances {\n          id\n          type\n          name\n          amount\n        }\n      }\n      assets {\n        domesticRealEstate {\n          id\n          landlineNumber\n          address\n          realEstateValuation\n        }\n        automobiles {\n          id\n          plateNumber\n          yearOfPurchase\n          purchasePrice\n        }\n      }\n      debtAndExpenses {\n        residentialInterestExpenses {\n          id\n          yearOfPurchase\n          location\n          lender\n          lendersIdNumber\n          loanNumber\n          borrowingDate\n          loanTermYears\n          totalAnnualPayments\n          faceValue\n          interestExpenses\n          outstandingDebt\n        }\n        otherDebts {\n          id\n          title\n          interestExpenses\n          outstandingDebt\n        }\n      }\n    }\n  }\n": typeof types.UpdateTaxReturnDocument,
    "\n  query GetTaxReturns($userId: String!) {\n    getTaxReturns(userId: $userId) {\n      id\n      year\n      userId\n    }\n  }\n": typeof types.GetTaxReturnsDocument,
    "\n  query GetTaxReturn($id: String!) {\n    getTaxReturn(id: $id) {\n      id\n      year\n      userId\n      lastStep\n      revenue {\n        wageIncomes {\n          id\n          ssn\n          name\n          salaryAmount\n        }\n        pensionPayments {\n          id\n          type\n          name\n          amount\n        }\n        vehicleAllowances {\n          id\n          type\n          name\n          amount\n        }\n      }\n      assets {\n        domesticRealEstate {\n          id\n          landlineNumber\n          address\n          realEstateValuation\n        }\n        automobiles {\n          id\n          plateNumber\n          yearOfPurchase\n          purchasePrice\n        }\n      }\n      debtAndExpenses {\n        residentialInterestExpenses {\n          id\n          yearOfPurchase\n          location\n          lender\n          lendersIdNumber\n          loanNumber\n          borrowingDate\n          loanTermYears\n          totalAnnualPayments\n          faceValue\n          interestExpenses\n          outstandingDebt\n        }\n        otherDebts {\n          id\n          title\n          interestExpenses\n          outstandingDebt\n        }\n      }\n    }\n  }\n": typeof types.GetTaxReturnDocument,
    "\n  query GetUserByPhone($phone: String!) {\n    getUserByPhone(phone: $phone) {\n      id\n      name\n      ssn\n      email\n      phone\n      address\n    }\n  }\n": typeof types.GetUserByPhoneDocument,
    "\n  query GetTaxReturnIncome($id: String!) {\n    getTaxReturn(id: $id) {\n      id\n      revenue {\n        wageIncomes {\n          id\n          ssn\n          name\n          salaryAmount\n        }\n        pensionPayments {\n          id\n          type\n          name\n          amount\n        }\n        vehicleAllowances {\n          id\n          type\n          name\n          amount\n        }\n      }\n    }\n  }\n": typeof types.GetTaxReturnIncomeDocument,
    "\n  query GetTaxReturnAssets($id: String!) {\n    getTaxReturn(id: $id) {\n      id\n      assets {\n        domesticRealEstate {\n          id\n          landlineNumber\n          address\n          realEstateValuation\n        }\n        automobiles {\n          id\n          plateNumber\n          yearOfPurchase\n          purchasePrice\n        }\n      }\n    }\n  }\n": typeof types.GetTaxReturnAssetsDocument,
    "\n  query GetTaxReturnDebtAndExpenses($id: String!) {\n    getTaxReturn(id: $id) {\n      id\n      debtAndExpenses {\n        residentialInterestExpenses {\n          id\n          yearOfPurchase\n          location\n          lender\n          lendersIdNumber\n          loanNumber\n          borrowingDate\n          loanTermYears\n          totalAnnualPayments\n          faceValue\n          interestExpenses\n          outstandingDebt\n        }\n        otherDebts {\n          id\n          title\n          interestExpenses\n          outstandingDebt\n        }\n      }\n    }\n  }\n": typeof types.GetTaxReturnDebtAndExpensesDocument,
};
const documents: Documents = {
    "\n  mutation UpdateTaxReturn($input: TaxReturnUpdateInput!) {\n    updateTaxReturn(input: $input) {\n      id\n      lastStep\n      revenue {\n        wageIncomes {\n          id\n          ssn\n          name\n          salaryAmount\n        }\n        pensionPayments {\n          id\n          type\n          name\n          amount\n        }\n        vehicleAllowances {\n          id\n          type\n          name\n          amount\n        }\n      }\n      assets {\n        domesticRealEstate {\n          id\n          landlineNumber\n          address\n          realEstateValuation\n        }\n        automobiles {\n          id\n          plateNumber\n          yearOfPurchase\n          purchasePrice\n        }\n      }\n      debtAndExpenses {\n        residentialInterestExpenses {\n          id\n          yearOfPurchase\n          location\n          lender\n          lendersIdNumber\n          loanNumber\n          borrowingDate\n          loanTermYears\n          totalAnnualPayments\n          faceValue\n          interestExpenses\n          outstandingDebt\n        }\n        otherDebts {\n          id\n          title\n          interestExpenses\n          outstandingDebt\n        }\n      }\n    }\n  }\n": types.UpdateTaxReturnDocument,
    "\n  query GetTaxReturns($userId: String!) {\n    getTaxReturns(userId: $userId) {\n      id\n      year\n      userId\n    }\n  }\n": types.GetTaxReturnsDocument,
    "\n  query GetTaxReturn($id: String!) {\n    getTaxReturn(id: $id) {\n      id\n      year\n      userId\n      lastStep\n      revenue {\n        wageIncomes {\n          id\n          ssn\n          name\n          salaryAmount\n        }\n        pensionPayments {\n          id\n          type\n          name\n          amount\n        }\n        vehicleAllowances {\n          id\n          type\n          name\n          amount\n        }\n      }\n      assets {\n        domesticRealEstate {\n          id\n          landlineNumber\n          address\n          realEstateValuation\n        }\n        automobiles {\n          id\n          plateNumber\n          yearOfPurchase\n          purchasePrice\n        }\n      }\n      debtAndExpenses {\n        residentialInterestExpenses {\n          id\n          yearOfPurchase\n          location\n          lender\n          lendersIdNumber\n          loanNumber\n          borrowingDate\n          loanTermYears\n          totalAnnualPayments\n          faceValue\n          interestExpenses\n          outstandingDebt\n        }\n        otherDebts {\n          id\n          title\n          interestExpenses\n          outstandingDebt\n        }\n      }\n    }\n  }\n": types.GetTaxReturnDocument,
    "\n  query GetUserByPhone($phone: String!) {\n    getUserByPhone(phone: $phone) {\n      id\n      name\n      ssn\n      email\n      phone\n      address\n    }\n  }\n": types.GetUserByPhoneDocument,
    "\n  query GetTaxReturnIncome($id: String!) {\n    getTaxReturn(id: $id) {\n      id\n      revenue {\n        wageIncomes {\n          id\n          ssn\n          name\n          salaryAmount\n        }\n        pensionPayments {\n          id\n          type\n          name\n          amount\n        }\n        vehicleAllowances {\n          id\n          type\n          name\n          amount\n        }\n      }\n    }\n  }\n": types.GetTaxReturnIncomeDocument,
    "\n  query GetTaxReturnAssets($id: String!) {\n    getTaxReturn(id: $id) {\n      id\n      assets {\n        domesticRealEstate {\n          id\n          landlineNumber\n          address\n          realEstateValuation\n        }\n        automobiles {\n          id\n          plateNumber\n          yearOfPurchase\n          purchasePrice\n        }\n      }\n    }\n  }\n": types.GetTaxReturnAssetsDocument,
    "\n  query GetTaxReturnDebtAndExpenses($id: String!) {\n    getTaxReturn(id: $id) {\n      id\n      debtAndExpenses {\n        residentialInterestExpenses {\n          id\n          yearOfPurchase\n          location\n          lender\n          lendersIdNumber\n          loanNumber\n          borrowingDate\n          loanTermYears\n          totalAnnualPayments\n          faceValue\n          interestExpenses\n          outstandingDebt\n        }\n        otherDebts {\n          id\n          title\n          interestExpenses\n          outstandingDebt\n        }\n      }\n    }\n  }\n": types.GetTaxReturnDebtAndExpensesDocument,
};

/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 *
 *
 * @example
 * ```ts
 * const query = graphql(`query GetUser($id: ID!) { user(id: $id) { name } }`);
 * ```
 *
 * The query argument is unknown!
 * Please regenerate the types.
 */
export function graphql(source: string): unknown;

/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  mutation UpdateTaxReturn($input: TaxReturnUpdateInput!) {\n    updateTaxReturn(input: $input) {\n      id\n      lastStep\n      revenue {\n        wageIncomes {\n          id\n          ssn\n          name\n          salaryAmount\n        }\n        pensionPayments {\n          id\n          type\n          name\n          amount\n        }\n        vehicleAllowances {\n          id\n          type\n          name\n          amount\n        }\n      }\n      assets {\n        domesticRealEstate {\n          id\n          landlineNumber\n          address\n          realEstateValuation\n        }\n        automobiles {\n          id\n          plateNumber\n          yearOfPurchase\n          purchasePrice\n        }\n      }\n      debtAndExpenses {\n        residentialInterestExpenses {\n          id\n          yearOfPurchase\n          location\n          lender\n          lendersIdNumber\n          loanNumber\n          borrowingDate\n          loanTermYears\n          totalAnnualPayments\n          faceValue\n          interestExpenses\n          outstandingDebt\n        }\n        otherDebts {\n          id\n          title\n          interestExpenses\n          outstandingDebt\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  mutation UpdateTaxReturn($input: TaxReturnUpdateInput!) {\n    updateTaxReturn(input: $input) {\n      id\n      lastStep\n      revenue {\n        wageIncomes {\n          id\n          ssn\n          name\n          salaryAmount\n        }\n        pensionPayments {\n          id\n          type\n          name\n          amount\n        }\n        vehicleAllowances {\n          id\n          type\n          name\n          amount\n        }\n      }\n      assets {\n        domesticRealEstate {\n          id\n          landlineNumber\n          address\n          realEstateValuation\n        }\n        automobiles {\n          id\n          plateNumber\n          yearOfPurchase\n          purchasePrice\n        }\n      }\n      debtAndExpenses {\n        residentialInterestExpenses {\n          id\n          yearOfPurchase\n          location\n          lender\n          lendersIdNumber\n          loanNumber\n          borrowingDate\n          loanTermYears\n          totalAnnualPayments\n          faceValue\n          interestExpenses\n          outstandingDebt\n        }\n        otherDebts {\n          id\n          title\n          interestExpenses\n          outstandingDebt\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  query GetTaxReturns($userId: String!) {\n    getTaxReturns(userId: $userId) {\n      id\n      year\n      userId\n    }\n  }\n"): (typeof documents)["\n  query GetTaxReturns($userId: String!) {\n    getTaxReturns(userId: $userId) {\n      id\n      year\n      userId\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  query GetTaxReturn($id: String!) {\n    getTaxReturn(id: $id) {\n      id\n      year\n      userId\n      lastStep\n      revenue {\n        wageIncomes {\n          id\n          ssn\n          name\n          salaryAmount\n        }\n        pensionPayments {\n          id\n          type\n          name\n          amount\n        }\n        vehicleAllowances {\n          id\n          type\n          name\n          amount\n        }\n      }\n      assets {\n        domesticRealEstate {\n          id\n          landlineNumber\n          address\n          realEstateValuation\n        }\n        automobiles {\n          id\n          plateNumber\n          yearOfPurchase\n          purchasePrice\n        }\n      }\n      debtAndExpenses {\n        residentialInterestExpenses {\n          id\n          yearOfPurchase\n          location\n          lender\n          lendersIdNumber\n          loanNumber\n          borrowingDate\n          loanTermYears\n          totalAnnualPayments\n          faceValue\n          interestExpenses\n          outstandingDebt\n        }\n        otherDebts {\n          id\n          title\n          interestExpenses\n          outstandingDebt\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  query GetTaxReturn($id: String!) {\n    getTaxReturn(id: $id) {\n      id\n      year\n      userId\n      lastStep\n      revenue {\n        wageIncomes {\n          id\n          ssn\n          name\n          salaryAmount\n        }\n        pensionPayments {\n          id\n          type\n          name\n          amount\n        }\n        vehicleAllowances {\n          id\n          type\n          name\n          amount\n        }\n      }\n      assets {\n        domesticRealEstate {\n          id\n          landlineNumber\n          address\n          realEstateValuation\n        }\n        automobiles {\n          id\n          plateNumber\n          yearOfPurchase\n          purchasePrice\n        }\n      }\n      debtAndExpenses {\n        residentialInterestExpenses {\n          id\n          yearOfPurchase\n          location\n          lender\n          lendersIdNumber\n          loanNumber\n          borrowingDate\n          loanTermYears\n          totalAnnualPayments\n          faceValue\n          interestExpenses\n          outstandingDebt\n        }\n        otherDebts {\n          id\n          title\n          interestExpenses\n          outstandingDebt\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  query GetUserByPhone($phone: String!) {\n    getUserByPhone(phone: $phone) {\n      id\n      name\n      ssn\n      email\n      phone\n      address\n    }\n  }\n"): (typeof documents)["\n  query GetUserByPhone($phone: String!) {\n    getUserByPhone(phone: $phone) {\n      id\n      name\n      ssn\n      email\n      phone\n      address\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  query GetTaxReturnIncome($id: String!) {\n    getTaxReturn(id: $id) {\n      id\n      revenue {\n        wageIncomes {\n          id\n          ssn\n          name\n          salaryAmount\n        }\n        pensionPayments {\n          id\n          type\n          name\n          amount\n        }\n        vehicleAllowances {\n          id\n          type\n          name\n          amount\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  query GetTaxReturnIncome($id: String!) {\n    getTaxReturn(id: $id) {\n      id\n      revenue {\n        wageIncomes {\n          id\n          ssn\n          name\n          salaryAmount\n        }\n        pensionPayments {\n          id\n          type\n          name\n          amount\n        }\n        vehicleAllowances {\n          id\n          type\n          name\n          amount\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  query GetTaxReturnAssets($id: String!) {\n    getTaxReturn(id: $id) {\n      id\n      assets {\n        domesticRealEstate {\n          id\n          landlineNumber\n          address\n          realEstateValuation\n        }\n        automobiles {\n          id\n          plateNumber\n          yearOfPurchase\n          purchasePrice\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  query GetTaxReturnAssets($id: String!) {\n    getTaxReturn(id: $id) {\n      id\n      assets {\n        domesticRealEstate {\n          id\n          landlineNumber\n          address\n          realEstateValuation\n        }\n        automobiles {\n          id\n          plateNumber\n          yearOfPurchase\n          purchasePrice\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  query GetTaxReturnDebtAndExpenses($id: String!) {\n    getTaxReturn(id: $id) {\n      id\n      debtAndExpenses {\n        residentialInterestExpenses {\n          id\n          yearOfPurchase\n          location\n          lender\n          lendersIdNumber\n          loanNumber\n          borrowingDate\n          loanTermYears\n          totalAnnualPayments\n          faceValue\n          interestExpenses\n          outstandingDebt\n        }\n        otherDebts {\n          id\n          title\n          interestExpenses\n          outstandingDebt\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  query GetTaxReturnDebtAndExpenses($id: String!) {\n    getTaxReturn(id: $id) {\n      id\n      debtAndExpenses {\n        residentialInterestExpenses {\n          id\n          yearOfPurchase\n          location\n          lender\n          lendersIdNumber\n          loanNumber\n          borrowingDate\n          loanTermYears\n          totalAnnualPayments\n          faceValue\n          interestExpenses\n          outstandingDebt\n        }\n        otherDebts {\n          id\n          title\n          interestExpenses\n          outstandingDebt\n        }\n      }\n    }\n  }\n"];

export function graphql(source: string) {
  return (documents as any)[source] ?? {};
}

export type DocumentType<TDocumentNode extends DocumentNode<any, any>> = TDocumentNode extends DocumentNode<  infer TType,  any>  ? TType  : never;